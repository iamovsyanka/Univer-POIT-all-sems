Вопросы:
1. Определение CMS и функции
2. Принцип работы CMS
3. Компоненты CMS
4. Особенности CMS
5. Классификация CMS
6. Достоинства
7. Хостинг и виды хостинга
Определение CMS и функции
CMS (Content Manager System) – система управления содержимым, компьютерная программа, которая используется для организации и обеспечения процесса по совместному созданию, управлению содержимым сайта.
Основные функции:
• Предоставление инструментов
• Управление содержимым
• Публикация содержимого
• Предоставление информации в виде, удобном для навигации и поиска
CMS: 
• Back-office (БД и работа с ней)
• Front-office (html, css)
Принцип работы
Суть работы состоит в схеме разделения содержимого сайта и его дизайна.
Редактор WYSIWYG
Еще одна функция CMS – помочь владельцу сайта, без специальных навыков, управлять сайтом.
Первая CMS – 1995 год.
Компоненты CMS
• Темы (шаблоны) – заготовка дизайна сайта, пустые страницы без наполнения их контентом
Особенности
Сайты на CMS основаны на следующих технологиях:
• Веб-сервер
• Хранилище данных (СУБД)
• Веб-приложение (для обеспечения работы самой системы)
• Визуальный редактор страниц
• Файловый менеджер с веб-интерфейсом для управления файлами сайта
• Система управления правами пользователей и редакторов
Современные CMS основаны на PHP и MySQL.
Практическое применение:
• Блог, форум
• Социальные сети
• Персональные сайты
• Корпоративные сайты
• Порталы
Виды CMS
• WordPress
• Joomla
• Drupal
• MODx и пр.

Преимущества:
• В работе используется наиболее эффективный инструмент
• Нет необходимости знать html
• Работа сайта постоянно тестируется пользователями, поэтому ошибки оперативно устраняются
• Снижение временных затрат на разработку сайта
• Легкое изменение дизайна сайта
• Множество встроенных расширений
• Настраиваемые права для управления контентом
• Можно предоставлять различные права пользователям, для просмотра контента
Недостатки:
• Могут встречаться сайты с одинаковым дизайном
• CMS имеет меньшую гибкость, чем сайты написанные вручную
• Часто становятся объектами атак хакеров
• Могут замедлять работу сайта
Хостинг. Виды хостинга
• По типу представляемого ресурса:
Виртуальный хостинг – вид, при котором много сайтов размещаются на одном сервере.
1. Виртуальный выделенный сервер – предоставляется место на диске, часть общей памяти и процессорное время сервера. Физически на одном реальном сервере располагается несколько виртуальных.
2. Выделенный сервер – сервер предоставляется в пользование целиком
3. Коллокация – хостинг-провайдер предоставляет место в дата-центре для оборудования клиента и подключения его к интернету.
 
Конструктор CMS WordPress
Вопросы:
• Сведения
• Преимущества и недостатки
• Управление и администрирование
• Темы
• Плагины
• Кэширование в WordPress
WordPress – это система управления содержимым сайта с открытым исходным кодом, написанная на PHP, сервер БД MySql. Сфера применения: от блогов, до достаточно сложных новостных ресурсов и интернет-магазинов.
Архитектура
WordPress построен по архитектуре: ядро + тема + дополнения
Ядро (движок) – обеспечивает базовую функциональность.
Дополнения представлены плагинами.
Преимущества и недостатки
Причины популярности:
• Бесплатный движок
• Практически неограниченные возможности
• Гибкая настройка внешнего вида и функциональности
• Простота администрирования 
• Возможность создать сайт и опубликовать контент в течении 5 минут
Преимущества:
• Наиболее популярная CMS
• Наиболее широкий набор плагинов, тем, виджетов и т.д.
• WYSIWYG редактор
• Технический опыт необязателен
Недостатки:
• Как использовать все возможности правильно
• Возможны проблемы при установке
Управление и администрирование
• Управление пользователями (использует контроль на уровне пользователей, при доступе к различным возможностям)
• Профили пользователей (каждый пользователь может настроить свой профиль по желанию)
• Динамическая генерация страниц (все страницы генерируются с использованием БД и шаблонов каждый раз, когда страница запрашивается браузером)
• Интернационализация и локализация
Темы
Шаблон или тема – отвечает за внешний вид и функциональность ресурсов. 
Тема позволяет изменить визуальное представление сайта, без вмешательства в код ПО
Тема может включать в себя файлы шаблона, изображения, каскадных таблицей стилей, настраиваемые таблицы, а также файлы php-кода
Тема, которые добавятся в соответствующую директорию на сервере, будут доступны в разделе Консоль – Темы – Внешний вид темы. Можно управлять отображением содержания, путем редактирования шаблонов, с помощью инструментов Редактор шаблонов и Темы шаблонов
Плагины
Плагины являются инструментом расширения функциональности WordPress’a.
Плагины предлагают пользовательские функции и возможности так, что каждый пользователь может адаптировать их к своему сайту и конкретным нуждам.
Что бы установить плагин: Плагины – Добавить новый. Так же можно скачать плагин с сайта разработчика и установить его с помощью функции – «Загрузить плагин»
С помощью плагинов можно решать задачи:
• Обеспечения безопасности сайта
• Борьба со спамом
• Техническая оптимизация ресурса
• Повышение функциональности и юзабилити ресурса
Меры обеспечения безопасности
Меры безопасности:
• Двухфакторная аутентификация
• Логины и пароли
• Шифрование
• Обновление CMS
Основы кэширования
Кэш – это промежуточный буфер, который позволяет хранить наиболее часто используемые данные в памяти или на жестком диске, что позволяет существенно ускорить процесс их выдачи.
Три основных вида кэширования:
• Кэширование страниц (WP Super Cache и W3 Total Cache) (позволяет сохранить результат выдачи всей страницы целиком). В ядре WP кэширование страниц не реализовано, но это возможно сделать с помощью плагинов
• Кэширование объектов (функции wp_cache_add, wp_cache_set, wp_cache_get). Реализовано в самом ядре, позволяет хранить объекты произвольного типа, полез разработчикам тем и плагинов. По умолчанию кэширование объектов непостоянное в WP, т.е. закэшированное значение действует только на один запрос страницы, и при последующих запросах, кэш генерируется с чистого листа
• Транзитное кэширование (функции get_transient, set_transient и delete_transient) – чаще всего используется для хранения фрагментов, особенно, когда речь идет о запросах на внешние ресурсы. Является постоянным по умолчанию и хранит все данные в БД
CMS WordPress работа с контентом
Вопросы
1. Структура БД WP
2. Виды контента
3. Виджеты
4. Создание страниц
5. Создание блога
6. Создание меню
Структура БД
WP использует ряд таблиц БД, связанных между собой, что бы свести к минимуму объем данных, который должен быть сохранен. Это создает связь Один для всех
Большинство таблиц связанны с одной, или несколькими другими таблицами через одно поле.
Таблицы БД по умолчанию имею префикс wp_
Основной таблицей является wp_posts. Она связывает воедино почти все остальные таблицы.
Только одна таблица не связана ни с одной другой wp_options – здесь хранятся данные о сайте и о системе WP
Две таблицы используется для хранения данных о таксономии (рубрики и их вложение)
Групповая установка сайтов подразумевает некоторые дополнительные таблицы.
Виды контента
4 типа контента:
• Сообщения (записи)
• Комментарии
• Пользователи
• Ссылки
Сообщения – наиболее важный тип в WP.
5 типов сообщений (записей) встроенных в WP:
• Запись, сообщение (post)
• Страница (page)
• Вложение (attachment)
• Редакция (revision)
• Элемент меню навигации (navigation menu item)
Записи – по умолчанию на главной странице попадают в RSS ленту сайта. Шаблоном для записи является файл single.php
Страницы – особенности:
1. Страницы могут использовать произвольный файл из папки с темой в качестве своего html или php шаблона
2. Имеют иерархию
3. Имеется возможность сортировать их по порядку
4. При включенных постоянных ссылка, страницы имеют url вида http://сайт/ярлык_страниы
В качестве шаблона страницы может быть использован один из следующих файлов:
1. {ваш шаблон}.php
2. Page-{ярлык_страницы}.php
3. Page-{ID_страницы}.php
4. Page.php
Вложения – тип поста. Предназначенный для управления файлами, загруженными через стандартный WP-загрузчик, а также для хранения информации.
Редакции – это черновики, которые автоматически сохраняются в процессе редактирования записи. Каждая редакция сохраняется в таблице wp_posts вместе с записью, с которой она связана как родитель, посредством поля post_parent
Элементы меню – сохраняются как записи, а затем выводятся при запросе отображения меню 
Комментарии
• Хранятся в отдельной таблице БД – wp_comments
• Комментарий может иметь метаданные
• Могут быть связаны с таблицей wp_users 
Пользователи
Имеют свои собственные таблицы wp_user, а также метаданные, которые хранятся в таблице wp_usermeta. Пользователя можно запросить и вывести архив. Кроме того, они содержат контент в виду биографических данных пользователей
Ссылки
Ссылки работают подобно записям, у них есть содержание, им можно присвоить элемент таксономии. Однако отличаются от записей тем, что у них есть совершенно другие поля для хранения данных: целевой ссылки, ее описание и др.
Можно использовать таксономию, что бы включить ссылки в архивные страницы

Среди четырех типов контента, только 3 могут содержать метаданные: записи, комментарии и пользователи
Управление виджетами

Виджет – независимые блоки содержимого, которые можно размещать на странице
Особенности:
• Виджеты помогут добавить содержимое и функции
• Можно перетаскивать в область виджетов
• Варьируются от темы к теме, не одинаковы для разных тем
Регионы и сайдбары
Виджеты Wordpress бывают типовые. Могут создаваться плагинами и темами, а могут быть определены в админке с помощью html-кода.
Роль регионов в WordPress играют side-бары
Создание блога
По умолчанию на блоге создана одна рубрика «Uncategorized»
Создание меню
По умолчанию WordPress создает базовое меню навигации, которое расширяется при создании новых страниц
По умолчанию, в качестве пунктов меню, WP использует заголовки созданных страниц

Конструктор CMS Joomla
1. Основные возможности и характеристики
2. Масштабирование системы
3. Позиции
4. Уровни доступа к системе
5. Настройки и расширение
Joomla – СУК написанная на php, использующая mySql (или другие реляционные БД).
Информацию со всех страница Joomla хранит в виде записей в бд. Не все данные хранятся в БД mySql, обычно фото и графика находятся в папке images
Joomla позволяет отображать интерфейс, фронтальные и административные части на любом языке
Основные возможности:
• Функциональность можно увеличивать с помощью дополнительных расширений
• Имеется модуль безопасности для многоуровневой аутентификации
• Система шаблонов
• Настраиваемые схемы расположения модулей. Содержимое модуля можно включить в содержимое материала
• Все компоненты можно написать самому или отредактировать существующие
Возможности администрирования
• Можно запрограммировать дату публикации
• Возможность ограничить доступ к определенным разделам сайта
• Настраиваемые схемы расположения элементов по областям шаблона
Масштабирование системы
Система представляет собой ядро, к которому подсоединяются компоненты
Компоненты могут состоять из:
• Модуля – это элементы, отображаемые на странице, в виде отдельных блоков
• Плагина
• Шаблона
В ядро Joomla входит:
• Блок и его разновидности с расширенными возможностями управления, с админ панелью
Баннеры
Контакты
Лента новостей
• Материал (статья) с метками и категориями
В Joomla страница генерируется из вывода html одного компонента, различных модулей и шаблонов
Позиции
Ссылка «Предварительный просмотр» (Расширения  Шаблоны)
Уровни доступа к системе
Уровни доступа настраиваются в общих настройках. Кроме того, уровни доступа могут настраиваться для содержимого категорий. Однако, эта категория не относится к настройкам просмотра материала. Учетная запись пользователя должна относиться к группе
1 группа: с доступом только к разделам стороны посетителей (группа пользователей интерфейса) (гость, зарегистрированный пользователь, автор, редактор, издатель).
2 группа: с доступом, как к разделам посетителей, так и к админ-разделу (группа пользователей панели управления) (менеджер, администратор, супер-администратор)
Настройки и расширения
Баннеры
Баннер может состоять из графики или кода HTML.
Компонент Баннеры позволяет редактировать баннеры, категории к которым они относятся, учетные записи рекламодателей, а также предоставляет детальную статистику
Контакт
Обновление Joomla
В настройках компонента можно выбрать, за какими версиями будет следить система обновления.
Сообщение
Встроенная система, для обмена личными сообщениями между пользователями, имеющими доступ к административному разделу. 
Что бы настроить компонент: Компоненты – Сообщения – Мои настройки
Лента новостей
Перенаправление
SmartSearch (Умный поиск)
По умолчанию Joomla использует метод полнотекстового поиска, т.е. поиска в содержимом БД
Среди возможностей компонента присутствует морфологический поиск.
Умный поиск использует два алгоритма Стеминга, один для английского языка, второй «Снежок» (Snowball)
Web-ссылки
Есть возможность создать на сайте каталог ссылок или раздел загрузок
Сторонние расширения
Управление расширениями
Установить расширение можно 4-мя способами:
1. Установить из JED
2. Загрузка пакета файлов
3. Установка из директории
4. Установка через URL
Особенности работы с контентом, 
создание категорий материалов
Вопросы
1. Создание категорий
2. Публикация контента
3. Создание меню
4. Что такое ЧПУ
5. Модули оплаты на Joomla
6. Альтернатива создания шаблонов
Создание категорий
Весь контент в Joomla, как правило, укладывается в трехуровневую иерархическую структуру:
1. Секции
2. Категории
3. Объекты контента
Один материал может находиться только в одной категории.
Две основные причины использовать разделы и категории:
1. Схемы блогов из списков – в Joomla существуют встроенные пункты меню, чтобы пользоваться этими функциями, а именно:
a. Раздел блогов, 
b. раздел списков, 
c. категории блогов,
d. категории списком
2. Организация материалов в менеджере материалов – здесь можно отфильтровать материал по категории или разделу
Публикация контента
Технически статья состоит из:
• Названия и алиас
• Текст
• Категория
• Автор и алиас автора
• Права доступа
• Язык, на котором написана статья
• Метаданные, для поисковых система и других роботов
• Варианты, кому видна статья
Как можно установить редактор:
Система – общие конфигурации – сайт – редактор по умолчанию
Создание меню
Joomla использует организацию материалов в три уровня (Раздел – Категории - Материал).  Однако от этого не обязательно будет зависеть структура меню сайта.
При выборе пункта меню типа Список материалов категории можно указать количество отображаемых ссылок на странице. В поле заголовков страниц можно скрыть или показать заголовок страницы. В поле Порядок материалов, по которой будут отображаться материалы. В закладке Параметры страницы можно указать заголовок страницы, которая открывается при нажатии на определенный пункт меню.
Что такое ЧПУ
Что бы настроить ЧПУ: Общие настройки – Сайт – Настройки SEO – Включить ЧПУ и Перенаправление URL
Модули оплаты
Интерактивное создание шаблона
Ресурсы для создания шаблонов:
• datsko.it
• cooltemplate.com
• Artisteer
• Themler
• TemplateToaster
 
Конструктор CMS Drupal
1. Краткая характеристика системы
2. Основные понятия
3. Базовый функционал
4. Модули
Краткая характеристика
Drupal – система управления содержимым, на языке PHP, и использующая в качестве БД – реляционную БД.
Это и среда разработки для программистов, и готовая система + конструктор готовых решений.
Drupal имеет модульную архитектуру, с компактным ядром, предоставляющим API, к которому могут обращатьcя модули. Ядро системы открытое.
Архитектура Drupal позволяет применять его для построения различных типов сайтов.
Наиболее важные функции
• Единая категоризация всех видов содержимого (таксономия)
• Широкий набор свойств при построении рубрикаторов (плоские списки, иерархии, иерархии с общими предками (родственные категории))
• Вложенность категорий любой глубины
• Поиск по содержимому сайта
• Ролевая модель
• Динамическое построение меню
• Поддержка xml-форматов
• Вывод документов в RDF/RSS
• Агрегация материалов с других сайтов
• BlogAPI 
• ЧПУ (человеко-понятные url)
• Перевод сайта на разные языки
• Возможность создания сайта с пересекающимся содержимым
• Мультисайтинг
• Уведомления о выходящих обновлениях модулей
Достоинства
• Возможность добавления модулей
• Открытый исходный код
• Высокий уровень безопасности
• Функциональность на грани универсальности
Недостатки
• Сложность освоения
• Активное использование БД, поэтому может некорректно работать на ресурсах, которые предоставляет дешевый хостинг
• Мало бесплатных шаблонов
Основные понятия
• Нода – элемент контента, который основывается на одной и той же базовой структуре. Нодами являются все материалы на сайте. Их можно проектировать в админке, они могут содержать произвольные поля. Нода может с легкостью расширяться
• Тасономия – в Drupal таксономия состоит из 2-х элементов: словари и термины.
В Таксономии можно создавать вложенные меню (уровень вложенности неограничен).
• Формат ввода – формат ввода – это определенный набор правил, применяющийся при отображении страниц сайта, после ввода содержимого. Формат ввода применяется только при выводе введенного содержимого. Форму ввода и содержимое в БД он не изменяет.
• Блоки – часть содержимого сайта (виджеты)
• Права доступа – позволяют точно выполнить настройку доступа и отображение информации, для каждого тип, роли, пользователя. Количество видов ролей неограниченно
• Меню – можно формировать любое число блоков с меню
База для функционирования CMS Drupal (Apacha + php + mysql)
Drupal является надстройкой, которая функционирует над определенной базой Apacha + php + mysql.
• Apache – открытое популярное приложение веб-сервер, как правило, резидентная программа, обслуживающая запросы клиентов
• PHP – это приложение, транслирующий интерпретатор. В его задачу входит подготовка программного кода и его исполнение. Здесь в качестве программного кода выступает Drupal
• MySQL – СУБД, в его задачи входит работа с данными
Модули
Модули располагаются на сайте drupal.org
Модули могут быть представлены в нескольких версиях:
• Стабильная
• Альба/бета
• разрабатываемая
Все модули на drupal.org – бесплатны. Платные модули распространены очень слабо
Страница модуля имеет следующие элементы: 
• название
• описание
• ссылки на скачивание
• статистика
• ссылки на страницу документации, демо и трэкер багов
Разработка и обслуживание
Суперадминистративное меню – Admin Toolbar – предоставляет независимый от темы интерфейс администрирования. Административные ссылки отображаются в css js menu на всех страницах сайта. Кроме регулярных пунктов меню также включены задачи и действия. 
Резервное копирование – Backup and Migrate – резервное копирование и миграция. Поддерживает сжатие gzip, bzip, zip. А также автоматическое резервное копирование по расписанию.
Юзабилити и упрощение интерфейса
Удобное добавление ссылок в редакторе CKEditor – CKEditor link.
Ноды в CMS Drupal
1. Типы материалов
2. Работа с контентом
3. Расширение возможностей сайта
4. Конструкция блока
5. Модули
Типы материалов
Ноды бывают различных типов. Тип ноды характеризует содержимое, которое может храниться и отображаться с использованием конкретной ноды.
По-умолчанию, при установке, уже существует два типа материалов: 
• Статьи
• Страницы
Создание нового типа ноды (материала): Перейти в специальный раздел панели администратора – Структура – Подраздел Типы материалов – Добавить тип материала.
При создании типа материала мы работаем с полями формы, которые будут использоваться для добавления определенной информации в структуру материала. Можно добавить требуемые поля различных типов, что позволит гибко сформировать информационную структуру содержимого конкретной ноды (материала)
Что бы наполнить сайт контентом, необходимо перейти в раздел «содержимое», где расположена кнопка «добавить материал»
Так как ноды деляться по типам, то перед созданием материала, необходимо выбрать интересующий тип.
Создавая материал, можно сразу же добавить на него ссылку в меню.
Весь дизайн сосредоточен в шаблонах, причем как пользовательской части, так и панели администратора. Для выбора шаблона необходимо перейти в раздел оформление, здесь есть несколько стандартных тем, присутствует кнопка «установить новую тему». После загрузки тему можно установить и назначить в качестве темы по-умолчанию.
Завершающий этап – настройка и поиск ошибок, для этого необходимо перейти в раздел конфигурации. Все настройки поделены на определенные группы, в зависимости от назначения.

Расширение возможностей сайта
Как и многие другие CMS, Drupal состоит из модулей. 
Модули – это расширения Drupal’a, добавляющие в него дополнительный функционал.
Модули можно подключать по мере необходимости. Подключить их можно в пункте меню «Расширения»
Chaos tool suite – удобный API для разработчика
Admin toolbar
MetaTag – 
Google Analytics
Webfrom
Создание модуля
Кастомные модули лучше располагать в отдельной папке (Custom)
Путь модуля: modules/custom/[module:name]
Необходимо создать файл имя_модуля.info.yml – данный файл отвечает за базовую информацию о модуле. Пробелы в yml-файлах имеют значение, и соответствующие отступы используются для организации данных в структуру по образцу массива.
Далее можно перейти на страницу расширения, найти свой модуль, включить его.
Создадим контроллер, который будет отвечать за вывод на страницу.
Все контроллеры модуля должны находиться по пути: modules/[module:name]/src/Controller  - в данной папке будем хранить классы контроллера.
Название контроллера должно начинаться с большой буквы
Создаем файл маршрутизации, под названием имя_модуля.routing.yml – данный файл служит для описания маршрута по базовому шаблону. В качестве параметров маршрута бывают такие значения:
• Заголовок страницы
• url страницы
• контроллер
• права доступа
• и т.д
Список параметров:  
• path – url будущей страницы
• defaults – значения по умолчанию (все значения начинаются с префиксов)
• _title
• _controller – путь до контроллера, где указывается класс и метод контроллера
• Requirements – указывает права доступа (все значения начинаются с префиксов)
• _permitions
Очищаем кэш и переходим на страницу /hello
Конструкция блока
Блок – некоторая часть экранного пространства, которая отображается в браузере, т.е. контейнер для контента или функционала сайта.
Что бы редактировать блоки: Управление/Структура/Схема блоков
Когда в разделе есть вкладки с доступными темами, ссылка на страницу с демонстрацией регионов для текущей темы, области в которые можно поместить блок и «Расположить блок» для добавления блока.
При выборе другой темы, все может существенно отличаться. Кроме того, число областей в разных темах – различны.
Что бы переместить блок, необходимо кликнуть мышкой на крестообразную стрелку и перетащить ее в нужное место. Или же изменить значение в списке областей, в колонке «Области»
Все блоки Drupal делятся на два типа: предоставляемые модулями или созданными вручную (пользовательские). Все присутствующие по умолчанию блоки – это блоки, предоставляемые модулями.
Система блоков имеет, по сути, два отдельных API: plugin API (позволяет создавать блоки) и entity API (позволяет управлять настройками блоков).
Для создания типов пользовательских блоков: Администрирование  Структура  Схема блоков  Типы.
Структура  Схема блоков  Добавить блок – можно добавить пользовательские блоки определенного типа.
 
APEX
• Характеристика APEX
• Понимание архитектуры
• Структура главной страницы среды APEX
• Использование SQL-рабочей области
Oracle Application Express (Apex) – это инструмент ускоренной разработки Web приложений для базы данных Oracle
Oracle Apex позволяет создавать информационные системы с использованием веб-браузера (среда разработки представляет собой веб-приложение) и не требует от разработчика большого опыта программирования.
Версии системы:
• Скачать дистрибутив, установить СУБД Oracle и приложение APEX на своем компьютере (без интернета)
• Облачная версия (не нужна никакая установка):
• Бесплатная версия – ограничен объем БД и не разрешено коммерческое использование
• Коммерческий облачный сервер БД
• Автономная версия
Встроенная в APEX средства:
• Темы пользовательского интерфейса
• Управление навигацией
• Управление формами
• Гибкие отчеты
Возможности APEX:
• Среда разработки имеет простой и эффективный веб-интерфейс
• Помощники миграции из настольных БД и электронных таблиц
• Встроенный мастер генерации отчетов в формате pdf
• Инструменты для интеграции и веб-сервисами
• Большое количество шаблонов UI
• Интуитивно-понятное управление рабочим пространством
• Управление объектами по принципу drag & drop
• Графический помощник создания sql-запросов
• Защищенность данных сессии после авторизации пользователя
• Встроенный редактор PL/SQL
• Мастер создания диаграмм и отчетов на сайте
• Поддержка более 20 языков, включая русский
APEX – кросс-платформенная система
Разработка в APEX может вестись на нескольких языках: PHP, Java, PL/SQL
При разработке на PL/SQL, внутреннем языке БД Oracle можно обойтись без промежуточного звена в виду веб-сервера Apache, HTML-код будет выдавать непосредственно СУБД
Во время своей работы Application Express:
• Выполняет аутентификацию и авторизацию
• Осуществляет контроль выполнения приложений на разных уровнях запуска
• Выполняет проверку состояния «качества» и обработку запросов
• Управляет состояниями сессии
• Генерирует и обрабатывает страницы
 Понимание архитектуры
Oracle Application Express размещается в БД. Представляет собой набор таблиц с данными и PL/SQL код.
Oracle применяет HTTP Server (Apache), в котором содержится плагин mod_plsql. Этот плагин перенаправляет все запросы между элементами APEX в БД Oracle в реальном времени.
APEX генерирует из данных, находящихся в БД Oracle, динамические страницы, при этом позволяет нам обрабатывать их в режиме реального времени. При создании приложений, написанных на АРЕХе, сгенерированные метаданные, которые хранятся в таблицах БД Oracle, модифицируются. Во время работы программы АРЕХ считывает эти метаданные и подставляет их в программу, отображая в браузере.
Структура главной страницы в АРЕХ
В состав АРЕХ входят следующие четыре основных компонента:
• Application builder
Для создания html-интерфейса. Каждое приложение в АРЕХ представляет собой коллекцию страниц, связанных друг с другом при помощи вкладок, кнопок ил ссылок.
Номер приложения – целое число
• SQL Workshop – среда управления объектами БД
• Team Development
• Package Apps
Использование SQL рабочей области (SQL Workshop)
Object Browser – позволяет использовать элемент управления деревьями для просмотра свойств объекта и создания новых объектов.
SQL Commands – позволяет вам вводить специальный SQL-код
• Запуск команды SQL или PL/SQL блоков
• Результаты запроса выводятся на экран в табличном виде
• Просмотр объясняет планы относительно DML и запросов
• Описание объектов БД
• Сохранение SQL-запросов для более позднего использования
• Доступ к истории команд
SQL Scripts. Возможности включают:
• Загрузка и скачивание сценариев SQL 
• Выполнение сценария в фоновом режиме
• Просмотр журналов результатов сценария
Utilities
• Data Workshop – загружает данные в тексте, XML форматах электронной таблицы
• Object Reports 
Схема – это логический контейнер для объектов БД.

Рабочая область – виртуальная частная БД, позволять множеству пользователей работать с одной инсталляцией oracle app express, обеспечивая при этом приватность пользовательских объектов и приложений. 
Каждая область имеет свой идентификатор и имя. 
Чтобы внести изменения в свое рабочее пространство администратор workspace отправляет запросы на изменения администратору oracle apex
Можно создать одно пространство для совместного использования всеми разработчиками, однако можно создать и персональное рабочее пространство для каждого разработчика или проекта. 
Схема – рабочее пространство может быть связанно с одной или несколькими схемами. При создании рабочего пространства необходимо указать в какой схеме оно будет располагаться. Можно выбрать существующую или создать новую. Схема – некий логический контейнер, который помещен в БД. 
При создании нового раб пространства с новой схемой для этой схемы создаётся новое табличное пространство и файл данных. Файл данных является управляемым. Используя файлы, управляемые Oracle админ БД указывает операции в терминах объектов БД, а не на имена файлов 
Имена файлов даются в соответствии с соглашением. 
Роли пользователей в apex 
В apex выделяются следующие роли пользователей 
1.Админы рабочих областей – пользователи, которые выполняют административные задачи рабочих пространств.
2.Разработчики – это пользователи которые создают и редактируют приложения могут иметь отдельные рабочие области или разделять общие 
3.Админы – суперпользователи которые управляют всеми ресурсами экземпляра oracle apex с помощью сервисов app express service.
4.Пользователи – имеют пользовательский доступ к приложению, не используют сторонний механизм для аутентификации. 
Роли пользователей в apex 
Управление пользователями приложения Express. Админы рабочей области могут создавать новые учетные записи пользователей, управлять существующими учетными записями пользователями, изменять пароли пользователей. Может заблокировать активировать 
Записи могут быть заблокированными, активированными, истекшими. Пароли для этих учетных записей так же могут иметь ограничения такие как: фиксированное время жизни, макс. количество последовательных неверных паролей при попытке входа в систему.
Админы рабочей области могут создавать 3 разных типа учетных записей пользователя. Чтобы создать новую учетную запись пользователя необходимо на домашней странице рабочей области нажать administration-manage users and groups  create user. Пользователей можно объединять в группы пользователей. 

